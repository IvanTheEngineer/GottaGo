# Generated by Django 4.2.16 on 2024-11-24 07:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(100)])),
                ('destination_description', models.TextField()),
                ('jpg_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/destinations_jpgs/')),
                ('txt_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/destinations_txts/')),
                ('pdf_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/destination_pdfs/')),
            ],
        ),
        migrations.CreateModel(
            name='FileMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_title', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(255)])),
                ('upload_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('keywords', models.CharField(help_text='Comma-separated keywords', max_length=500)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='TravelPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(100)])),
                ('group_size', models.IntegerField()),
                ('trip_description', models.TextField()),
                ('jpg_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/main_plan_jpgs/')),
                ('txt_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/txts/')),
                ('pdf_upload_file', models.FileField(blank=True, null=True, upload_to='uploads/pdfs/')),
                ('primary_group_code', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('jpg_metadata', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jpg_travel_plan', to='users.filemetadata')),
                ('pdf_metadata', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdf_travel_plan', to='users.filemetadata')),
                ('txt_metadata', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='txt_travel_plan', to='users.filemetadata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='plans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(100)])),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('expense_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='users.destination')),
            ],
            options={
                'ordering': ['-expense_date'],
            },
        ),
        migrations.AddField(
            model_name='destination',
            name='jpg_metadata',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jpg_destination', to='users.filemetadata'),
        ),
        migrations.AddField(
            model_name='destination',
            name='pdf_metadata',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdf_destination', to='users.filemetadata'),
        ),
        migrations.AddField(
            model_name='destination',
            name='travel_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to='users.travelplan'),
        ),
        migrations.AddField(
            model_name='destination',
            name='txt_metadata',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='txt_destination', to='users.filemetadata'),
        ),
        migrations.AddField(
            model_name='destination',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='destination',
            name='users',
            field=models.ManyToManyField(related_name='destinations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentText', models.TextField()),
                ('upload_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='users.destination')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL)),
                ('requested_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invites', to=settings.AUTH_USER_MODEL)),
                ('travel_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='users.travelplan')),
            ],
            options={
                'indexes': [models.Index(fields=['travel_plan', 'requested_by', 'requested_to'], name='users_invit_travel__4da0aa_idx')],
                'unique_together': {('travel_plan', 'requested_by', 'requested_to')},
            },
        ),
        migrations.AddIndex(
            model_name='filemetadata',
            index=models.Index(fields=['content_type', 'object_id'], name='users_filem_content_6e79ed_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['destination', 'expense_date'], name='users_expen_destina_2dcf04_idx'),
        ),
    ]
